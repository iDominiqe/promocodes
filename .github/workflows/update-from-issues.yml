name: Update Promocodes from Issues

on:
  issues:
    types: [opened, labeled]
  workflow_dispatch:

permissions:
  contents: write
  issues: write

jobs:
  update-promocodes:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'promocode')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # –í–∞–∂–Ω–æ: –ø–æ–ª—É—á–∞–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Update promocodes from issue
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const issueBody = issue.body;
            
            // –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ issue
            const codeMatch = issueBody.match(/–ö–æ–¥:\s*([A-Z0-9]+)/i);
            const rewardMatch = issueBody.match(/–ù–∞–≥—Ä–∞–¥–∞:\s*(.+)/i);
            const expiresMatch = issueBody.match(/–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:\s*(\d{4}-\d{2}-\d{2})/i);
            const descMatch = issueBody.match(/–û–ø–∏—Å–∞–Ω–∏–µ:\s*(.+)/i);
            const imageMatch = issueBody.match(/–ö–∞—Ä—Ç–∏–Ω–∫–∞:\s*(https?:\/\/[^\s]+)/i);
            
            if (codeMatch) {
              const fs = require('fs');
              
              // –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π JSON
              const currentData = JSON.parse(fs.readFileSync('promocodes.json', 'utf8'));
              
              // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥
              const newPromo = {
                code: codeMatch[1],
                reward: rewardMatch ? rewardMatch[1].trim() : '–ù–∞–≥—Ä–∞–¥–∞',
                expires: expiresMatch ? expiresMatch[1] : '2024-12-31',
                description: descMatch ? descMatch[1].trim() : '',
                image: imageMatch ? imageMatch[1].trim() : `https://placehold.co/600x400/667eea/white?text=${encodeURIComponent(rewardMatch ? rewardMatch[1].trim() : '–ü—Ä–æ–º–æ–∫–æ–¥')}`
              };
              
              // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ
              currentData.active.push(newPromo);
              currentData.last_updated = new Date().toISOString().split('T')[0];
              
              // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ
              fs.writeFileSync('promocodes.json', JSON.stringify(currentData, null, 2));
              
              // –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
              await github.rest.issues.createComment({
                issue_number: issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞ —Å–∞–π—Ç! üéâ'
              });
              
              // –ó–∞–∫—Ä—ã–≤–∞–µ–º issue
              await github.rest.issues.update({
                issue_number: issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'closed'
              });
            }
            
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # –û–±–Ω–æ–≤–ª—è–µ–º—Å—è –¥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
          git pull --rebase origin main
          git add promocodes.json
          git commit -m "Auto-update: –¥–æ–±–∞–≤–ª–µ–Ω –ø—Ä–æ–º–æ–∫–æ–¥ –∏–∑ issue #${{ github.event.issue.number }}"
          git push
